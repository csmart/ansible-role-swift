---
- name: Swift ring tasks
  block:
    - name: Manage account rings
      swift_ring:
        name: "{{ item.key }}"
        backup: "{{ item.value['backup'] | default(swift_rings_backup) }}"
        create: "{{ item.value['creates'] | default(swift_rings_create) }}"
        devices: "{{ swift_devices }}"
        min_part_hours: "{{ item.value['min_part_hours'] | default(swift_account_rings_min_part_hours) }}"
        part_power: "{{ item.value['part_power'] | default(swift_account_rings_part_power) }}"
        path: "{{ item.value['path'] | default(swift_rings_path) }}"
        rebalance: "{{ item.value['rebalance'] | default(swift_rings_rebalance) }}"
        replicas: "{{ item.value['replicas'] | default(swift_account_rings_replicas) }}"
        validate: "{{ item.value['validate'] | default(swift_rings_validate) }}"
      register: swift_result_account_rings
      with_dict: "{{ swift_account_rings }}"
      delegate_to: "{{ groups['swift_admin'][0] }}"
      become: true
      become_user: "{{ swift_user }}"
      when:
        - "inventory_hostname == groups['swift_admin'][0]"

    - name: Manage container rings
      swift_ring:
        name: "{{ item.key }}"
        backup: "{{ item.value['backup'] | default(swift_rings_backup) }}"
        create: "{{ item.value['creates'] | default(swift_rings_create) }}"
        devices: "{{ swift_devices }}"
        min_part_hours: "{{ item.value['min_part_hours'] | default(swift_container_rings_min_part_hours) }}"
        part_power: "{{ item.value['part_power'] | default(swift_container_rings_part_power) }}"
        path: "{{ item.value['path'] | default(swift_rings_path) }}"
        rebalance: "{{ item.value['rebalance'] | default(swift_rings_rebalance) }}"
        replicas: "{{ item.value['replicas'] | default(swift_container_rings_replicas) }}"
        validate: "{{ item.value['validate'] | default(swift_rings_validate) }}"
      register: swift_result_container_rings
      with_dict: "{{ swift_container_rings }}"
      delegate_to: "{{ groups['swift_admin'][0] }}"
      become: true
      become_user: "{{ swift_user }}"
      when:
        - "inventory_hostname == groups['swift_admin'][0]"

    - name: Manage object rings
      swift_ring:
        name: "{{ item.key }}"
        backup: "{{ item.value['backup'] | default(swift_rings_backup) }}"
        create: "{{ item.value['creates'] | default(swift_rings_create) }}"
        devices: "{{ swift_devices }}"
        min_part_hours: "{{ item.value['min_part_hours'] | default(swift_object_rings_min_part_hours) }}"
        part_power: "{{ item.value['part_power'] | default(swift_object_rings_part_power) }}"
        path: "{{ item.value['path'] | default(swift_rings_path) }}"
        rebalance: "{{ item.value['rebalance'] | default(swift_rings_rebalance) }}"
        replicas: "{{ item.value['replicas'] | default(swift_object_rings_replicas) }}"
        validate: "{{ item.value['validate'] | default(swift_rings_validate) }}"
      register: swift_result_object_rings
      with_dict: "{{ swift_object_rings }}"
      delegate_to: "{{ groups['swift_admin'][0] }}"
      become: true
      become_user: "{{ swift_user }}"
      when:
        - "inventory_hostname == groups['swift_admin'][0]"
  tags:
    - rings
